typedef void* App;
typedef unsigned char __u_char;
typedef unsigned short int __u_short;
typedef unsigned int __u_int;
typedef unsigned long int __u_long;
typedef signed char __int8_t;
typedef unsigned char __uint8_t;
typedef signed short int __int16_t;
typedef unsigned short int __uint16_t;
typedef signed int __int32_t;
typedef unsigned int __uint32_t;
typedef signed long int __int64_t;
typedef unsigned long int __uint64_t;
typedef long int __quad_t;
typedef unsigned long int __u_quad_t;
typedef long int __intmax_t;
typedef unsigned long int __uintmax_t;
typedef unsigned long int __dev_t;
typedef unsigned int __uid_t;
typedef unsigned int __gid_t;
typedef unsigned long int __ino_t;
typedef unsigned long int __ino64_t;
typedef unsigned int __mode_t;
typedef unsigned long int __nlink_t;
typedef long int __off_t;
typedef long int __off64_t;
typedef int __pid_t;
typedef long int __clock_t;
typedef unsigned long int __rlim_t;
typedef unsigned long int __rlim64_t;
typedef unsigned int __id_t;
typedef long int __time_t;
typedef unsigned int __useconds_t;
typedef long int __suseconds_t;
typedef int __daddr_t;
typedef int __key_t;
typedef int __clockid_t;
typedef void * __timer_t;
typedef long int __blksize_t;
typedef long int __blkcnt_t;
typedef long int __blkcnt64_t;
typedef unsigned long int __fsblkcnt_t;
typedef unsigned long int __fsblkcnt64_t;
typedef unsigned long int __fsfilcnt_t;
typedef unsigned long int __fsfilcnt64_t;
typedef long int __fsword_t;
typedef long int __ssize_t;
typedef long int __syscall_slong_t;
typedef unsigned long int __syscall_ulong_t;
typedef __off64_t __loff_t;
typedef char *__caddr_t;
typedef long int __intptr_t;
typedef unsigned int __socklen_t;
typedef int __sig_atomic_t;
typedef __int8_t int8_t;
typedef __int16_t int16_t;
typedef __int32_t int32_t;
typedef __int64_t int64_t;
typedef __uint8_t uint8_t;
typedef __uint16_t uint16_t;
typedef __uint32_t uint32_t;
typedef __uint64_t uint64_t;
typedef signed char int_least8_t;
typedef short int int_least16_t;
typedef int int_least32_t;
typedef long int int_least64_t;
typedef unsigned char uint_least8_t;
typedef unsigned short int uint_least16_t;
typedef unsigned int uint_least32_t;
typedef unsigned long int uint_least64_t;
typedef signed char int_fast8_t;
typedef long int int_fast16_t;
typedef long int int_fast32_t;
typedef long int int_fast64_t;
typedef unsigned char uint_fast8_t;
typedef unsigned long int uint_fast16_t;
typedef unsigned long int uint_fast32_t;
typedef unsigned long int uint_fast64_t;
typedef long int intptr_t;
typedef unsigned long int uintptr_t;
typedef __intmax_t intmax_t;
typedef __uintmax_t uintmax_t;
typedef uint8_t AsymPublicKey[32];
typedef uint8_t AsymSecretKey[32];
typedef uint8_t AsymNonce[24];
typedef uint8_t SymSecretKey[32];
typedef uint8_t SymNonce[24];
typedef uint8_t SignPublicKey[32];
typedef uint8_t SignSecretKey[64];
typedef uint8_t XorNameArray[32];
typedef uint64_t ObjectHandle;
typedef ObjectHandle CipherOptHandle;
typedef ObjectHandle EncryptPubKeyHandle;
typedef ObjectHandle EncryptSecKeyHandle;
typedef ObjectHandle MDataEntriesHandle;
typedef ObjectHandle MDataEntryActionsHandle;
typedef ObjectHandle MDataPermissionsHandle;
typedef ObjectHandle SelfEncryptorReaderHandle;
typedef ObjectHandle SelfEncryptorWriterHandle;
typedef ObjectHandle SignPubKeyHandle;
typedef ObjectHandle SignSecKeyHandle;
typedef ObjectHandle FileContextHandle;
typedef SelfEncryptorWriterHandle SEWriterHandle;
typedef SelfEncryptorReaderHandle SEReaderHandle;typedef struct { int __val[2]; } __fsid_t;
typedef struct {
 XorNameArray name;
 uint64_t type_tag;
 _Bool has_enc_info;
 SymSecretKey enc_key;
 SymNonce enc_nonce;
 _Bool has_new_enc_info;
 SymSecretKey new_enc_key;
 SymNonce new_enc_nonce;
} MDataInfo;
typedef struct {
 _Bool read;
 _Bool insert;
 _Bool update;
 _Bool delete;
 _Bool manage_permissions;
} PermissionSet;
typedef struct {
 char* cont_name;
 PermissionSet access;
} ContainerPermissions;
typedef struct {
 uint64_t type_tag;
 XorNameArray name;
 PermissionSet perms;
} ShareMData;
typedef struct {
 SignPublicKey owner_key;
 SymSecretKey enc_key;
 SignPublicKey sign_pk;
 SignSecretKey sign_sk;
 AsymPublicKey enc_pk;
 AsymSecretKey enc_sk;
} AppKeys;
typedef struct {
 char* name;
 MDataInfo mdata_info;
 PermissionSet permissions;
} ContainerInfo;
typedef struct {
 SignPublicKey sign_key;
 PermissionSet permissions;
 char* name;
 char* app_id;
} AppAccess;
typedef struct {
 uint8_t* key;
 uintptr_t key_len;
} MDataKey;
typedef struct {
 int32_t error_code;
 char* description;
} FfiResult;
typedef struct {
 uint64_t mutations_done;
 uint64_t mutations_available;
} AccountInfo;
typedef struct {
 char* id;
 char* scope;
 char* name;
 char* vendor;
} AppExchangeInfo;
typedef struct {
 AppExchangeInfo app;
 ContainerPermissions* containers;
 uintptr_t containers_len;
 uintptr_t containers_cap;
} ContainersReq;
typedef struct {
 XorNameArray id;
 uint64_t tag;
 SymNonce nonce;
} AccessContInfo;
typedef struct {
 char* name;
 char* description;
 XorNameArray xor_name;
 uint64_t type_tag;
} MetadataResponse;
typedef struct {
 SignPubKeyHandle user_h;
 PermissionSet perm_set;
} UserPermissionSet;
typedef struct {
 uint64_t size;
 int64_t created_sec;
 uint32_t created_nsec;
 int64_t modified_sec;
 uint32_t modified_nsec;
 uint8_t* user_metadata_ptr;
 uintptr_t user_metadata_len;
 uintptr_t user_metadata_cap;
 XorNameArray data_map_name;
} File;
typedef struct {
 AppExchangeInfo app;
 ShareMData* mdata;
 uintptr_t mdata_len;
 uintptr_t mdata_cap;
} ShareMDataReq;
typedef struct {
 uint8_t* content;
 uintptr_t content_len;
 uint64_t entry_version;
} MDataValue;
typedef struct {
 AppExchangeInfo app;
 _Bool app_container;
 ContainerPermissions* containers;
 uintptr_t containers_len;
 uintptr_t containers_cap;
} AuthReq;
typedef struct {
 MDataKey key;
 MDataValue value;
} MDataEntry;
typedef struct {
 ContainerInfo* containers;
 uintptr_t containers_len;
 uintptr_t containers_cap;
} AccessContainerEntry;
typedef struct {
 AppKeys app_keys;
 AccessContInfo access_container_info;
 AccessContainerEntry access_container_entry;
 uint8_t* bootstrap_config;
 uintptr_t bootstrap_config_len;
 uintptr_t bootstrap_config_cap;
} AuthGranted;
